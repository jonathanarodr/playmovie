buildscript {
    repositories {
        google()
        mavenCentral()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        classpath(LibraryDependency.GRADLE_PLUGIN)
        classpath(LibraryDependency.KOTLIN_PLUGIN)
        classpath(LibraryDependency.NAVIGATION_SAFE_ARGS)
        classpath(LintDependency.DETEKT_PLUGIN)
        classpath(LintDependency.KTLINT)
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }

    apply plugin: "io.gitlab.arturbosch.detekt"
    apply plugin: "org.jlleitschuh.gradle.ktlint"

    detekt {
        config = files("${project.rootDir}/tools/linters/detekt-rules.yml")
        allRules = false
        parallel = true
    }

    dependencies {
        detektPlugins LintDependency.DETEKT_FORMATTING
    }
}

/**
 * FIXME create a plugin and configure in all modules
 * https://github.com/jonathanarodr/playmovie/issues/28
 */
subprojects {
    afterEvaluate {
        if (!project.hasProperty("android")) return

        android {
            compileSdkVersion AndroidConfig.SDK_COMPILER

            defaultConfig {
                minSdkVersion AndroidConfig.SDK_MINIMUM
                targetSdkVersion AndroidConfig.SDK_TARGET

                testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
                testInstrumentationRunnerArguments["clearPackageData"] = "true"
                vectorDrawables.useSupportLibrary = true
            }
            sourceSets {
                main {
                    java.srcDir("src/main/kotlin")
                }
                test {
                    java.srcDir("src/test/kotlin")
                    java.srcDir("src/sharedTest/kotlin")
                }
                androidTest {
                    java.srcDir("src/androidTest/kotlin")
                    java.srcDir("src/sharedTest/kotlin")
                }
            }
            buildFeatures {
                viewBinding = true
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}