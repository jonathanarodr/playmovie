plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'io.gitlab.arturbosch.detekt'
}

android {
    compileSdkVersion sdk_compile_version
    buildToolsVersion "31.0.0"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31

        applicationId "br.com.jonathanarodr.playmovie"

        versionCode 2
        versionName "2.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility java_version
        targetCompatibility java_version
    }
    kotlinOptions {
        jvmTarget = java_version
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests {
            returnDefaultValues true
            includeAndroidResources true
        }
    }
    dependenciesInfo {
        includeInApk true
        includeInBundle true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(":network")
    implementation project(":common")

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version")

    implementation("androidx.core:core-ktx:$android_core_version")

    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")

    implementation("androidx.room:room-ktx:$room_version")
    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")

    implementation("androidx.navigation:navigation-fragment-ktx:$navigation_version")
    implementation("androidx.navigation:navigation-ui-ktx:$navigation_version")

    implementation("androidx.appcompat:appcompat:${appcompat_version}")
    implementation("androidx.recyclerview:recyclerview:$recycler_version")
    implementation("androidx.constraintlayout:constraintlayout:$constraint_version")
    implementation("androidx.browser:browser:$browser_version")
    implementation("com.google.android.material:material:$material_version")

    implementation("com.google.code.gson:gson:$gson_version")

    implementation "com.jakewharton.timber:timber:$timber_version"

    implementation("io.insert-koin:koin-android:$koin_version")

    testImplementation("junit:junit:$junit_version")
    testImplementation("androidx.test.ext:junit:$junit_ext_version")
    testImplementation("android.arch.core:core-testing:$android_core_version")
    testImplementation("androidx.room:room-testing:$room_version")
    testImplementation("com.google.truth:truth:$truth_version")
    testImplementation("com.google.truth.extensions:truth-java8-extension:$truth_version")
    testImplementation("io.mockk:mockk:$mockk_version")
    testImplementation("com.squareup.okhttp3:mockwebserver")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version")
    testImplementation("org.robolectric:robolectric:$robolectric_version")

    androidTestUtil("androidx.test:orchestrator:$android_test_version")
    androidTestImplementation("androidx.test.ext:junit:$junit_ext_version")
    androidTestImplementation("androidx.test:runner:$android_test_version")
    androidTestImplementation("androidx.test:rules:$android_test_version")
    androidTestImplementation("androidx.test.espresso:espresso-core:$espresso_version") {
        exclude group: "com.android.support", module: "support-annotations"
    }
    androidTestImplementation("com.google.truth:truth:$truth_version")
    androidTestImplementation("com.google.truth.extensions:truth-java8-extension:$truth_version")
    androidTestImplementation("io.mockk:mockk-android:$mockk_version")
    androidTestImplementation("org.robolectric:annotations:$robolectric_version")
}

detekt {
    config = files("${project.rootDir}/tools/linters/detekt-rules.yml")
    failFast = false
    parallel = true
}